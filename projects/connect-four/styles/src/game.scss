:root {
	--color-player1: red;
	--color-player2: yellow;
}

td {
	width: 90px;
	height: 90px;
	border-radius: 50%;
	background-color: lightgray;
	padding: 5px;
}

table {
	border-collapse: separate;
	border-spacing: 12px;
}

.board {
	background: rgba(0, 0, 255, 50%);
	width: fit-content;
	padding: 1rem;
	border: 4px solid black;
	border-radius: 1rem;
}

dt {
	margin-top: 2rem;
	font-weight: bold;
}

.badge {
	font-weight: bold;
	color: black;
	padding: 0.5rem;
	border-radius: 0.5rem;
	text-align: center;
}

.badge.player1-color,
td.player1-color,
#discAnimation.player1-color {
	background-color: var(--color-player1);
}

.badge.player2-color,
td.player2-color,
#discAnimation.player2-color {
	background-color: var(--color-player2);
}

.result {
	font-size: 3rem;
	font-weight: bold;
}

#gameHeader {
	margin: 0.5rem;
	background-color: rgba(255, 255, 255, 0.75);
	padding: 1rem;
	border-radius: 1rem;
}

.result.victory {
	color: hsl(120, 50%, 35%);
}

.result.defeat {
	color: hsl(354, 75%, 60%);
}

.result.draw {
	color: hsl(211, 66%, 65%);
}

#discAnimation {
	left: -100px;
	top: -100px;
	width: 90px;
	height: 90px;
	border-radius: 50%;
	position: absolute;
	background-color: green;
	z-index: 999;
}

@media screen and (max-width: 1600px) {
	td {
		width: 50px;
		height: 50px;
		border-radius: 50%;
		background-color: lightgray;
		padding: 5px;
	}

	#discAnimation {
		left: -100px;
		top: -100px;
		width: 50px;
		height: 50px;
		border-radius: 50%;
		position: absolute;
		background-color: green;
		z-index: 999;
	}
}

table td.winning {
	animation: highlight 0.5s ease-in-out infinite alternate;
}

@keyframes highlight {
	from {
		filter: brightness(1);
	}

	to {
		filter: brightness(0.5);
	}
}

.game-win-modal {
	border: 0;
	border-radius: 1rem;
	text-align: center;
	padding: 2.5rem;
	width: 50%;
}

dialog[open] {
	animation: animateDialog 1.25s ease-in-out;
}

dialog[open]::backdrop {
	/* background: rgba(0, 0, 0, 0); */
	animation: animateDialog 1.25s ease-in-out;
}

@keyframes animateDialog {
	from {
		transform: translate(0%, 225%);
	}

	to {
		transform: translate(0%, 0%);
	}
}

.blocked {
	cursor: not-allowed;
}

.possible-column {
	cursor: pointer;
	filter: brightness(1.25);
}

.blocked.possible-column {
	cursor: not-allowed;
	filter: brightness(1);
}

#helpButton {
	z-index: 999;
}

.board-container {
	flex-direction: row;
}

@media screen and (max-width: 1024px) {
	#game-div {
		padding: 3rem;
	}

	main.game-container {
		width: 100vw;
		display: flex;
		justify-content: center;
	}

	aside {
		width: 100%;
	}

	.board-container {
		flex-direction: column;
	}

	#game-info {
		margin: 0 2.5rem;
	}
}
